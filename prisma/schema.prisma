// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  HM        Float
  HS        Float
  HK        Float
  HC        Float
  HJ        Float
  MS        Float
  MK        Float
  MC        Float
  MJ        Float
  SK        Float
  SC        Float
  SJ        Float
  KC        Float
  KJ        Float
  CJ        Float
  kriteria  Json     @default("[\"H\",\"M\",\"S\",\"K\",\"C\",\"J\"]")
  role      String   @default("user")
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Alternatif {
  id        Int      @id @default(autoincrement())
  name      String
  harga     Int
  merk      String
  shade     Int
  ketahanan Int
  coverage  String
  jenisKulit String
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Review {
  id       Int      @id @default(autoincrement())
  review    String
  rating    Int
  alternatifId Int
  alternatif Alternatif @relation(fields: [alternatifId], references: [id])
  userId    Int
  user      User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
